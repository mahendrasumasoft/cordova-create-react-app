workflows:
    react-native-android:
        name: React Native Android
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                
                PACKAGE_NAME: "com.destwin.sumasoft" # <-- Put your package name here e.g. com.domain.myapp
                CM_KEYSTORE: Encrypted() # <-- Put your encrypted keystore file here
                CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmd2ZTcxMXRTdUpkZDFReDF6MW9TVFlKRDR4aDhzdDIxODZ5TFRDbURhQ2xScG1XNk8tTnNON2d5eU96amFVZy1HUFk4X1JXdGVtY1Uwa3o3R1FCVkdlM0hmMVE9PQ==) # <-- Put your encrypted keystore password here
                CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmd2ZTlFdVhUOUFod1J0Q0FlMnZqX0M1Y01HV0pTNDBXLURRREhHMXR3V0xQM0hnd1B4SmdSUGRJc3hZS21BZFZxVGpyZ2VYNTVlV2cwbDVjU2d4R3ZTaWVtREE9PQ==) # <-- Put your encrypted keystore alias password here
                CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmd2Zkhja2lnM2w2Z1Z2ZWNpc05VOUw5WjVkWkdwczVxb2FYUzJiOS1STWNRT21ZdTBuN1EtajRPOHdwOFNrM1dUbjBIMmN3bkN3REdzN24za1l4aGYtOG84eFE9PQ==) # <-- Put your encrypted keystore alias username here 
            node: latest
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                    storePassword=$CM_KEYSTORE_PASSWORD
                    keyPassword=$CM_KEY_ALIAS_PASSWORD
                    keyAlias=$CM_KEY_ALIAS_USERNAME
                    storeFile=/tmp/keystore.keystore
                    EOF               
            - name: Build Android release
              script: |
                # Set environment variable so it can be used to increment build number in android/app/build.gradle
                # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
                # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
                export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
                cd android && ./gradlew assembleRelease
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
            email:
                recipients:
                    - saurabh.rajput@sumasoft.net
                    - mahendra.raut@sumasoft.net
                    - supriya.malusare@sumasoft.net
                notify:
                  success: true     # To not receive a notification when a build succeeds
                  failure: false    # To not receive a notification when a build fails
            slack: 
              # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
              channel: '#channel-name'
              notify_on_build_start: true   # To receive a notification when a build starts
              notify:
                success: true               # To not receive a notification when a build succeeds
                failure: true              # To not receive a notification when a build fails
            google_play:
              # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
              credentials: Encrypted() # <-- Put your encrypted google-services.json here
              track: alpha
