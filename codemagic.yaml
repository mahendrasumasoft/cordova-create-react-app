workflows:
    react-native-android:
        name: React Native Android
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                
                PACKAGE_NAME: "com.destwin.sumasoft" # <-- Put your package name here e.g. com.domain.myapp
                CM_KEYSTORE: Encrypted(Z0FBQUFBQmd2ZW9JeGVUNFlLRHhpeHlYbWxOS09oeEVKU1ItY3ZnTUFKcjJVTjMtYjJkbkpxQkl4akxoLVJnSkg4OWFaam92M0trallKVV9LRGZyemw3OTJ5bnlCVzlkSGl2bGFIZHgwa0xXVnJ0eTYzMnBXSWM1SjJtaFh6MUExOUZneUJoV0ZOXzUzTDd3NXFwd2FRcENrdHd6T3RJRTBXV1BzakVhYlNYNHhLQVlOVXVRdFliQnJnb3p4Wnl6SU8zbGQ5djlwMkwtb1pDQ0lLUWdRTEU2YzkzMGdUQzVyTkw4dWZzdjFjdU44NXBtSGY4aFVHLXdOSXBJUTZ6MnBLTXBDbmNqeXdueFE2MEdPcjl5eHowanRrWEtxVGdTeHoybFdKZUJJM2J0MXFRekk1SnBWSjVld3dpeTZGa251N0Q3N3lDbktpNW1neW5VVWRCbm90VF95UHhPb09fNWYwSm03amNlREJWRVdVRzhWaU41Qkx2MnJDVEtXTGdLZWJoa3UyOXI1eEM3SVdRMlRWdXY4ekpTMVNnNUJ4M2x1elI0Z1luRWRDZ0VoS1ZXSWZ0b3R6akN5WVBZOFdtRlBycG5NNUJ2NnFXMk5kUEZtb0VOcmtVZTNHY2lyTExaX0ZhaUtRbnlMUHh2UXV5UldybmRJckYybWdHdjh3SkVZMnA5YW1jMnh5bEV6cEJjZjFJTlFDalNuQnZBT253Zlh2QzY3UGxfamF3ZXQwYmNMVlBYdkxNc2lQd3BUSjBXN1haVHAwa3lHOFNlTWNuNnVLV2Y3dmdsMHNWX0p0YzNUcXF3a1RzVnotT1pua1pQb21heVJmcjItaldWYm5HWUpUTkhtamk2ZHM0VWhSeFBvOU5sNU1mQWMyc0FPV29Jdk9kdkc4dXZMNnZ5c2tUWV83Y3d4ZVdrM3FVenpZU0JUS2VqUTEwTnNGMXJHMU5nYlRZYURWN0dhRExOSGdLSlJDYi1PTERoSXJLZFU2Q3NMX1htY3pWYnJOVlJLS0dWZlB6ZDZra1hmR0Q5UklQeEFvU05QOGJoenJnRzZFZEV5SWpBMFl4RzJZRUhRbFlhT2g1YlVDSTg5SjA3VzZzVmhvYjdJZGw0VTE1ek9BMHVWMW5lQTl3VWhiU1NOYjl1MWRvRzZseldjNTU3bVhyMm5WRXZjRGxWLXhTdDZKSTFaTkpxTEdRZUFrcDlQdGRTbW9UVktBZ25Zd1pmYjVzdUdVZlJQXzZiZ2lmN0ZZQ3YyVm5SbUZ4YnRINUxqVmpnZFpINXpxZHdoM3NocFhvYmo3TlRLV1Y3QTBBRUVtUWw4YnFPQ25weDlTcllLeWtKNDV1a0ltQl8tZzhmQ1FtbWRKcnN5dHJiaGpBVVlqZnNURnFuN2NPOEsxUC1UaVhQNXhhaTROeUFWUFNiX3M5UEJ6OVFSX2VtcFZJVTh2WVRLenVEeUpCc3h5Q3U4VlBVNkNIeGlVcnd0dnJWTGRpUmx6Rnc1R2h0dW5GNDRpWW9PZHNacFc0LTNDQ3N3T1NtaWVTUDVqaUdqbnJCQVIyNkZEdlkxVWoxd2NIRGVJbW9IbHE0QlJGZk9yX3I3cnl1WmtXeEkxZUp6UUVCWkN5YzNYSy12bktFTFlxbktydDE3dDZPODk3QnVxUVhFQnh5QVdNaTBqTG9Td054NkF2dnRMQjRvX2sxT0Y5MllYeHdEckdFcjl6dXBRdXB4b3FhRUF5X2kzNU4tXzNVdUdwVm1uZjZKRk5hZF9KWGtBWVk1MHpTZ0g3Y2FRUklpRHRDWGU5UTlpdDM3VGtoSnAyMEhmc1lwLWpTYWJidXNrdTZFQ29wTHNCMzZoTV9uVVBFMk1XcFV4d3VIN3JTdDZFYUtOSEhHV0dOaUt1aUJJbE9JZlpTZEJpc1FzMDFYZnFrUTdULXNPbHN2bUU3dl9YdndfWVl3QlBFcm1UOVl3cTgwTlFtUnc2bzV0amFXV1BrZkdKU2JtME1wY3VyY25fTjhyX1VYd1kzUFhhcDFGdXNfa0NxX05PSDJxUlRDTEVGTEVkZGtyekFZV0NzdURsZU04RndyLW8yVEhDUk96Z0NidzA5aENMLUJtRENmR0cyVWZJaGEtVTJSRWZfTlU4ZzR1RWpSRGUtdXdWWG5qTkxsajFBeXV2N1RXT3JLRDFFUFcxd0dsTDJHMVdKZFB2b3JpU0FhZWVUS2hoUVR6TEhsZlp3WmNDMExVSm51TEkyZGNOSF8xNm80WDM5am1QZFF0c3NjUjdXNFlmdzBXd1lkU1l6a1BpNEMtUFdGQmwtS3JjUWptd0dQSXBJLTBJOU1HQUl4LWxpWXN1UnFkU0pWYmI4Ri0wdWZpQ3BKTmlzT1JqdzI0eTA5cEdMaUYyQjFaaVVIVUdfalJqM2RENERyMlBWbkM2SlBiQmdOUE1MTTk4UzVaMEFiZnVFUW40TUxSX0R1Z0M3WFlBRVRobFlyWjBmQTRHVG9ZOWNlODdxQW5DOVg1ODdIMC1qQmxmTzFwMDBFU25ycHRlY2R0M29lYWNzRDBqUklIWDhMQURIRHRQQ3paekZhU2N2Z0pWRWJtaUdfTmRKUWZiOWFhZURLQ0lsel9EeTJIbVp1c0w1eFl2dm1HbWthYUlKNlpOSzdtZFFBRmpMMHRPNzIxUmVsQmFsRGpyM3RONEcyazNIY09Jb1ExdWZOMkctSTVfSE1MQkFEc1FIQ2RVSHh2ZlY4b0JXWGhoNDEwN0ZTMXJkUV9HeUd3d1daNjdkSEVSWVFEa0hpSXF1UHFhQ21WalBJNXViaFczclZnRHh5UENESGhWUnNNN291VnNtVXlkVi0zSnVpU05tdFl0ZUJybHk2cjFBT2g1bXJmbkV5NTR3WFJWT1pSdUNWc0g2UElyT1BmbXY5cFI4SVRVRC03em5KcUxfT2hnVE9iX1VJNFpTeU9kSzRnQ0piSzU3TDJDa29reURaVUVaNFFPYlFhQkJmY01lVXlZTll6YTRHOGV1T1E4Nkh5X0VQM0h0WlpnMVptRWc3eS1tblBPdUVIU0ltVVZjaVV5X3lFc1RLOXRoRzhWbF9ULURvQjZBTVlEQlR6QmdCXzhsTjRDNWhaaV9iNWhxS1Z4dGtxY01obnB2eEZWM2U0bmNHUnpMSlhvUXZlRGtlTnVwQkpTbXRaZkxUYzVkdUtFZG13cEU0WG9YVGthZ1RuQUpsRFhENkNvcEM0SHhNMDU3T1Y4R2s3MEZjQzF3TDNnc01sUzhVSzZwNXlPOTVLVjFpOVhBT2tVVjZYOWRyQWxzLXd2emMybVQzb2laZGFKQlhhanRmNk1yQVQzUWM0aUJUVmJ0TDZLWng5dTJzdENtdXM4a2V1dXBGemdZSlk2Rm5jVGVFd3lkeUk1UnF6NjBiT2tXbzRUNjU2bTg3a2lFazBVOTVzLVdmVk1nbnhlemlLdWQ2WU5Na3g4RExlSERQcEEyN2tKczQ2Z3lHUmdFM3JJOTE0OHRkaG9Eczg0MU5WSU5jeWU2LUYweWR6SHUyMnAzeFhuSUFQYi1WWEJ2ZnlyR18xb2dDMGIyNDNMVDVvekxKOWNRVDlIOEMwRXdjU21MaHZwZTJka29PZmRnWkxwNTBPX3dxNGpyVWxFZlVra1NjbUdUZzJQRFZTOUVVM3NRNlB2UGxJQ2o5aEJwMGs5X0x2VlBtWDdYcjNsY2d4VlJYZDZ3MHd5eER3a1NUNzA1R1hMb3pLSDUzVTYxVWFxWm5QcXdlMzYyVlJkMTE3cTV1Q3FTY2Y2STFSX05QYlJvbGxLVnFDODNaNzNWQV90b3pUUWR1Szg0aVFtOTRlODlNbENac0Zzb2JqZHpnSEt4dmpJRGpHQVl2cGRVdW1tTkcwZDI4dlI3WUtSRng3MWxhY01NSU9uNEVrZFhQaHFuNmY5b1R0WWxNYm1nTkNDbnpxbllrN1JzbE1wMTBFRU40NUhMT3JLVGVTOU5XTGgwZFdZQU1ta2gtT3gteFN1Yk1UR2JpVUJ4ZjYyNy1LRkRiZXAyY3lNcXZGY1hjaThKbktZbnhWX09HOHJxN2xXSGdINHFvV1ZDcG9ETzN0QkNIRHE5aTJ0aHJESDRFbnpkSmNfa0ZyQ0hQUlVBZDRfMDd1X0FCQjNqQnMwLUJGeXU1b2F6X2dUeTI3MlcxZzlOQl9zSjBUV09mcWt5ZmlmTzJLTG5sZW14dGpXa2RvWkpJNE5hSzFMU0t3c3ZHb3FMUWI1R3VCNEtFRnZYemxoVjRXUHNPc3NHMFBQdjRDZnIyZURnX1BjYkhyN1YxUjZQTUVkMjdMcVpYSDZRV2U1X2llUEhiNVprSWowY2I4d2hGNFN2QlNTcEo1WkVxdlBvelJ4MzZJOGFMc09oaUMzSlJlMkgzY05UVVdDU0J6cE1GeVZQZUVkREtfZU5OeHNFRl9TSEp1QmxkS1pVbWtiaFlOU01Tdm9Jb2NwT2ZnZjZKU1dRSUJrOHdfRE9pOTdCVnFQNDJ3alF2Qml3RzBSZHhnWDUxYkVjTEJqMU9kSm5xeUlQTmNzbU5hcXNSLXBOZTg2SUs5bVZNbW0taFFNUFBYd19MUFNUUnRwalVqYlpsN3lVd19lc2dZRU1Eemc4LXFhQWpkV3MwT2haVHZqekpBY1Z6SFlmVHNidGlqSWFwRDNUVzJLX0ZBN3Y2b256QmJibGd4b2tieGpXOEZLdW5GdE5SalMyZnRRbEZMcE9PVHBQbXhjSVdpLW5SWFdJZW5iRWNKeDRHclV2bFhiYXo1ZXFLdDhrVHVUSnZMRWtlNHhKbzVkaFRSQ1NxdWpnbDdYci1YTktRYzNxSTh0ZTBPOFVmRVhibFNKZmlGN2dKWllZcjVRblRhYzBnaTFBRGpQbGNpcXFtbWNUd1BDd0pySjYzQjhaM3hQY2JLLUc5aGJ3SWFsTV9teVpESGlIWUtxRzlxWnE5cnVOWlN6cEYtVnlTU2NsVkpCNkNTbHFrOVpmakFCcDVYYUxFSlpNc3ZXMnJtc1J3SVFnWjFMbGhxcmk3Z250M3l1TENJRmVpVHo2ZjFvbDJ4b2M2Y1E4cEpwVlBydU5fMWRMV1BhSGFSZmZtbEU4djdPMnhJVFJuWDgwNlpGUVlFc3Y5eW85SVJRUFYwOU5saWxCd2xHR3h1VVBsenFqRVRYWHhFZ0x2NkNTYmVuSGVSMXlBQXhBcHJnN1pUMlptYlgwVkVFRzRDbzVHaHB1R0NSUFRocUlsV1ZfTXdDWDB5elhyb09BQkhwaHdXVjdndWI3SW8tbTRTd2ZBM2x1X0hxMHVmMWRZM3hWd214OTA3czlvRzZ4RlNTWEJiWEtXUVVRamFmSWVQaWpXZXY2LUlXYVFhNjZwV0lKNTd4X014LW1pSktCT0pBTzlGdllNenlTaTZoVlpUMEFCdHZObVNKakxLTEU4OFo2b0hQQmh5Zjl3OXRrMEp6aXRjSzRDZkw4TmtnZkUwVWVEbUJHMHEtek9vUkpvWFVWSVh1SUVvWVFEcGw5NVYxR3VOZWFCbFNuRnREb1ZldW5JZDQwSS04YjRNV1FrX010YXh5VHlsMGR3N0dLWWtNZkppb2hnNzVKN1NiVDhsdnZRZmtQZlFqOHgycVFwenJYV1g2V29zRFQwd0Z0bV9TM09RMDFMUHZIUDdjQTB1U1psNEtmWENoS3ZaQlhfUnpndVpZVUpseWpQVFoxSUdja1RVcmF5eDBNb0dxcnhTVDM4UHJpd3gtLWp2TXBFMkFYemtaeFdwOWUwNzg2Um1CUzJwMFlvZHJoVFo0ZnhlWG4xVjdEYjk4cms1a1JodzRDajhYb1NleVdOSUN1OWNBclBxcHlZanduSy1GRnZpWUJ5aWU0N1Z3TkJmWXk5VUY5VVdkRTBGMXREREdsX1Y2R2szMEp4blFEeWotcFFqcDlqRGtUQkdCV3U1THZaeFlqRkEyM1kzRG1zcUd5cVA1eExkek1hbUQ1RlZIdnZzWnZ2emZLdXhyV1dRSFZtTVY1M2hwWkpqU2oxeUdpcWxVZUJvTFZTVDMzWUQ5N3VnUjRwQUZmMkctVDZGR2trR2ZPZExwMWo5N0swcm9CMndhV2p1ZkY2S0FFYW84bDkzbmtWajZYbzlKRlMtRG5CUWN6aThBSHIzb0ZhS3BHX28zY3ZxZG1PczhINWFvYmNHU0xfalhzRU5pczVwVjUtTVRKV3JoMkVJUEx0V1FHZFF5azUtY29wVFB3WjJUak5RWlU5UnJhbXc2VnNSa2pNOXdaZUE2dDl0RFlPN29BekVvZzZtU1NSbGNUMWJMbHNLRHRWOFVuVFl4MW5BcHRNcWpHVjl5SmVMOEhYOGl4QThrSUR0TTRoNVNkRjFScTVtWjNxRFI0Um8yYzh6QW5hVGEzZ2ZuSGZJVUIzYm9FOUZrcjlyVmU0TFhjUXNnUnd2MXRuT1NVNnY5cDdxb0lMZUw0all3b29WeUFNTmlvV1FtSFFiZkxRaWF6ZE5BY1VWZUlmZ2hZejktbVp1bnExalJTLTBFeXdZNWFCakdKdkJhcmpoUmcxNElRSFpnOFVrOWU0ZjhnSERobmxJVmNqQkcyZTNnWldqNFlxZEl0aXNNcEpUbFJpRFhXUzFFRWdTc0gtVWhOSkdKdVN6VXJLa1hYR1Vjcmx3RHpyYlNWWlZVd2FOLUNrZjR5RGZpWXhoSnAyMGpiS0lwcDBWZHdfdHdJQnd5UGNIZUN2NjlzLXlTN0dycTZTLUd0Wk9rc3I4ZTh5WUk4SzhLNXprTkZHQlBUYTd0TkY5NHdlSkpEV05xbDRQaTdNYjZEdkNVSFRXTVUwSlYyUURGZkJpMmRCenliaFJaRGV4LUJ6Yk0xME1FNW8ycG9BVnRCVWx1Wm1Pek1wNW9BSl9BaDA0Uk5xTDE2VDFQM2UwQkFQeU1pbmFJYUFDU0VuOFNScDBfZ240QVZWNEd2UmkzTVRxcTNlUC1EVkdUUHJIWEVxYmdPTVFyYzJEd2lqMkpDVFd4N3c4Rl9ESzRJZDBiWE51Yl91UTRITnRaT2pvVXp3dUVVbGIwRWZ0SmZrZ1hpcnU4VUtlTS1UM1UtRm5pdkY3S3ZtYldEMm94WjQtVlYxWjZVc3VLLWlKMm1NVnRoS2wyU3NDTFlzby1fOTl6clZzQ0xseVhMdUNBS2FqNVJmbURaQzBwdFQ2MUJBU2RWNTk1R1RYdXlPb0ppbUtJTUpvM1BVM1UtQWZWaDJMb1pELXRLeXlreXZOZnRsTWREaTVqLTBJTFNDSEJTaTlTY2ZYRFdGcGdma0JzNE04WllOVWcySVZUdkNZcFZxVzVBaGNYNUNhZnJRMUp3cUNzalBOaUhjMDhYbzBLd25uZjFycWZwOXlkMWVmVDJBV2lyRU50WFhKWHhMUjRLQWNXVDliSmkyNFdOZ2tLaEhqMFpLd1FWdVBFcUg4azhBbnphcUhkQlA3R1A0eWlHMmRMdmFHZTQyTHNBNmM2T1VwaHNEOExBS0hfLVZobUFFR2pkVFZPVUo2XzFMZko2VC1VR0NuVFBVQldFRlFxdS1UNmlJd0JIMW5CZWpEUTVpR0RQekZaeUtMdXlmSXZCNHFkV2tVMGVTdE9RQlBSa2l0YVFEd1pBQXdkMEZTcU9FclB1M1YxNmxUTjdrbU5NMzBCQTFPSjk1b2VIalBqRXJKQWhjekRZOTcyOXJQZ1RfVXlCaWxKbFJYUC1DXzVfU2VFY1RSVGZqWEdPX0JrVHRyb25Xbjh6WGxTUlJNQl9XcGpBM1U2UDZkWkJ2bjFTVUh2MVViWEUyVlhiRGJxeEQ0NjhycjlJX1V1YlhzR2c0aVg1V2laWjdSSjlyUzJ0a1JtMVFiOGZGYkNrRk1fOWozaS13S0o2aThrVG1veU5hc0RaaWhYT2FoSWVmS196LXVuMUxDWWdXNHEtZ1RZRTc3LVFERjZBMVBCbGV2UEIyOHNVbE9NWkk1V3JMa0dwODFvUkZPUENTZDV2ei1xeGFvMUlsUy05UnI1UThpaFNVU1hfLXc4TG82VUtMeGxmVTJRTkxlUFhDOWlJUXNkZHM0UzhINjUybHNXYm1lUV9Ndng4bmVKV1AwZjZWV21BOWt4QXU5VUl3ZmU2a0xGeV9xbnU3RkwwZFlIRlc3TnFPT3p5cEF6QVJ6MU4zazV1Y2gyOWdxbUhOT3FaS1BaM2RsamEyblZ1SFBzVVROWk9GWEpnYjh5X3pXZkVEeWUybXhaUlV6ZVpPQ2tTTDJnLXNZbDl4cVBjVlVEVkhJLWhoUnRqWm1qNmVBNjFMUG1zNXRqdmY1UzBVZTVic1B0ajE5akY4N29MX2xJVm9hSjhBMGt2aVNFSU1DODhkaTNuSW1qMG9PM2xhbTdvWk5ESTlaZy1HakxXQzdlcFppSjJHN25sRkNNUUQ0cHBsS0tLekxYaHpmVE9BTlNhWmUzNHp0Ujd6eWdiR2hfdVBpOG9DQXI3YW5GMXJUXzlaRTFmTDBuSlMxeklPQURNZzloRmhPLWFac2FwcG13XzdoaVU3bmR6Zm02akpjbC1JSVhRVkFKQV9adkFfRUQ5REFwaWNEMWkxc25YeUdBeGRINUtHVGdabmF2OFl2b2FEWTBSVi04cW4tVVZTTXVTR1lBbWlzQlNYNGZCbFFDLW9RVGJ3RWw2UFRYQm5WSFhVakxuZldoQWlJMV9jYjBvczliZ2xwSF9rczhpSm16LXdwODZ2ZVNPRWZjNTcweUZyT0tFcnUtWkY2V3UxbVBlNEJuclJWSlU2a2VBdG9McDZGMlRGTW5zRnZ3RFUyWnpUVmtIZ1V2TDFUbWUzbTBCaUFpVDBucW9UNk0yd25jMnh2VnJzUWlJc2dlUm5tN3NNUl91LWt3cU9vMXU3TU1GNXNqY2hpVmhmNHBac1pmYUlZaEozMVltMDNqUzBVLWZmQkQwTW95NlVXbmhHRHpQaXk2U2ZRaUhOTFNJTUFjbkl2MUxTWVNDRUs2MmNTdy1ZZ3NzOUJ2djhEVkl0Z3JqZ3lLRjVOMzA2U0FrTG0zQkRmSkhYV1NTMXpsZGcyUVpBOThldFNjdzBybTZTczU0bGRCNnpyYlBoM0hUNmJYUXJpNFhiZG8xWFJZZkUxbHZNVVBDZXhKTDg2eUJYQWRUUU5WVWxZQjZEZTRLSVlwR2NnPT0=) # <-- Put your encrypted keystore file here
                CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmd2ZTcxMXRTdUpkZDFReDF6MW9TVFlKRDR4aDhzdDIxODZ5TFRDbURhQ2xScG1XNk8tTnNON2d5eU96amFVZy1HUFk4X1JXdGVtY1Uwa3o3R1FCVkdlM0hmMVE9PQ==) # <-- Put your encrypted keystore password here
                CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmd2ZTlFdVhUOUFod1J0Q0FlMnZqX0M1Y01HV0pTNDBXLURRREhHMXR3V0xQM0hnd1B4SmdSUGRJc3hZS21BZFZxVGpyZ2VYNTVlV2cwbDVjU2d4R3ZTaWVtREE9PQ==) # <-- Put your encrypted keystore alias password here
                CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmd2Zkhja2lnM2w2Z1Z2ZWNpc05VOUw5WjVkWkdwczVxb2FYUzJiOS1STWNRT21ZdTBuN1EtajRPOHdwOFNrM1dUbjBIMmN3bkN3REdzN24za1l4aGYtOG84eFE9PQ==) # <-- Put your encrypted keystore alias username here 
            node: latest
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                    storePassword=$CM_KEYSTORE_PASSWORD
                    keyPassword=$CM_KEY_ALIAS_PASSWORD
                    keyAlias=$CM_KEY_ALIAS_USERNAME
                    storeFile=/tmp/keystore.keystore
                    EOF               
            - name: Build Android release
              script: |
                # Set environment variable so it can be used to increment build number in android/app/build.gradle
                # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
                # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
                export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
                cd android && ./gradlew assembleRelease
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
            email:
                recipients:
                    - saurabh.rajput@sumasoft.net
                    - mahendra.raut@sumasoft.net
                    - supriya.malusare@sumasoft.net
                notify:
                  success: true     # To not receive a notification when a build succeeds
                  failure: false    # To not receive a notification when a build fails
            slack: 
              # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
              channel: '#channel-name'
              notify_on_build_start: true   # To receive a notification when a build starts
              notify:
                success: true               # To not receive a notification when a build succeeds
                failure: true              # To not receive a notification when a build fails
            google_play:
              # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
              credentials: Encrypted(Z0FBQUFBQmd2ZjRXYnF4LUllTVp5Mi1LMV9hcU1ucjYxWHpLVVlKdDBoUi1yOGY2ODNsRTJEakN4T0otXzlaYzRWWmdjemZIM0EtakdrTWFpTE5pY0wwRElXcXhYb3NRWXIwRUZ4cFZBWEYwTGpiVmdOdmxkbVVqTjlkdlRfek5DTGY3M3AxRVVqZkkwV0l4bGFvellKVU5wQmgzS1dnMnM0aHFyRjRLRkQ5ejJHa0l6SmpKQkZpaGI2ODhQUk4xOUpmaGdOTk5YRVpFRlVva19HbXB1aS1kM25WaXJxajl4bnBFNWdqTVZOQW4tVEQ3R09kZm1kS3FBeU9DR1JNUnltcmRlQzJid01xSmUyU0xWVW55bGk2SzFPRVZla1JDTlRhOFVXVW9FT1U3U2N4NkxxZG1ZMEpRN1N3bjBaUDl3OVpSdER2OU9LZm0zTmlvR25GTHVUaHZLNFZWSWNuVnhhYnFpVjlTTENiSTNXTDcyTEpBLUowWVd6TWlscmVEMTdaSXFtNjBXazdoUWZKSHZ1dDNiREZiVHdkLXlTQXE1amVoRTNSdUs3cE40Z3c5MkpGTHl6dnVYX0M5ZGxlQUx5aFZBMGlES1pOd1p5OWhaTXBmaU9KczlDY0tFZE91SUtmX0x2VlJwNDJvSFBfSnRMSXNKU2pWY2RiMHM4ZFVaZjJIVVliTlRNTHJwUWRlb1pFQmNKcDNIalVXRDVTa2QxcGs4cVFBMUs2YVlQV2ZPZURiSXotRE9Cc0UxVWdqajBEaUJpa0VBXzlwYzRfcS1ENWZ2VDY5NnRIU05zU2hjRVBDMGl3VF9za2lPUlJqT2JTdnhNbVNELWdIQVlyZzdETXBCRUdCZHQwM0YzTmVYaDNJZURYY1Z1ZXd6Z1FpNjZybVhJc2VEUXJnNk5Rc3N3dzY5S0VYNENiTXU1R1hlU2MyckF2ZF9QZjBYdmJSemQ0ekpJdmtHNEpBS05lWGNkcDRzeG44cHNCaVJ0bTZ4ODVCNGdHT09sQ3Uwc01wd1NzTEZUUmpqU3RWRTlYbXBHUUR3RkE5aVpIUm1pVTRCdmFUYWdEdGhEZVRnN2oxM2ZfRnJybEdXM0RDWDVmbmxzM3hsek9SY2dDenkycUVLMGJqQVBuVDVkd2EyLVRiQlFuTU1OX0w5X3Z1ZHYyYTMxQk1UZkJzODFiNm9lejFBUjIwclVBb2JqeWlLNnFMNER0U3RBVXI4SGJUZ3VoZlFITE4wUXBrUmlvVWpWT3ZHYmF2VFdlakMwR1pfaDRncEQxcmRjV3JSN0hIa2ZOc19Ra2VpaTdrS3Q4R0RYZGd4UUlQOHlfbDhWZUZXUUZqWTc1WjFRWDFVcUtQbVA1X25weDZKMmo0T1FQazZIc1lZQk5MRDIwc0J5Ym5fWFJQcjdHUzFQLWgyZkVMNXBOc1VQLVFYYzJoUmJGdTdSci1IdjNzR3RBYTRCb1RvWUw1a3NYWUhDb2F0M2QxaW9BNzVYNWpWaUtmN1owUmxQaDI3c1JfQm1LX3FoOWo2aGNlR0xiNjVULXoxQ0JIR0pxd2RKUG1zOEljalJtUElBYjN0b2kzdWtmZlU0Q0J6WTNGMmZtcUg1bGlVbXBFQlliRUpZaXpxTFdWcEZxZkNjdENvYmMwOC1fRktHQlJsZjM5Mko5WG1IbW5Bd08xNlBTTzNJR3g5Z2ZxVDlNME5kdF9aWFRkbGVwMjhVTlM2WFA1aG1iVjFUdDBzWjRndjZWSGhVVWNDTGVKUVpJLUdlVW5uOVYtZHVQTUhXdUJic1VUZXF6TW5FWWpSRFI0MjlyeS1qdk96TzlKUktLN1N1V2tBSllUUjZCakZDcE82WXNFeWhUY1UzUlE3blFZSFdMbnF3dXVtUFFLTTJFN2tQalJKbzB3ZmZxSWFrRUE3bVB5c2FOaF9UUEVkdHV2ckxCMFVJR2NIalNjQzY5Y2tGV2dab0VOSkhxeFhQVmJhaHhBMGwtb1hrY3hUTWcxdS16ejk1dkJyUFZXWURSX0JEb1lOTkRvLXVzbV9vNlhYSFVCYXRXNmlIWEt1dG1Hb1prbllQMGc5S2pXYVI4VDl6YjUxNGVpOXdUeTlXbFNHUHd5Qk1XLWdhTEdiWVFSM0FOamwtc2JBdURtV0ExbjVQX3BHTldjZXFJWUNrNk9ZWnMxblQwZ2FOMGtWMVhxTm9VMEpuc1dhb0otSk1neU9GNDNnUUczZE1xZjFjQ2dQNlJlV01HRmo3cGUwc0c4dUozcEtWa2NHS09hdmpnbDF2LW0xS2FKZVVLLWEwb0ZFR1pKZWZGSS1rLWJDaWhxUFl4M0cwT0ppandMZTVfUWJNY2x2MmcxbENVNkxZd1FpYTk0Z09EMmtPTHRqRWhtS1JiUG5qTERkUzNjQWFBMW4yeXF3Um9icTM1T0I4c2UwdEhaTk5mN25uaHMwdkxXRFZ6anFPNWRtZjlaSWpsRFFCRl8tazhkcGdJNVZhZ216Ul9CdXJITmpWRnZ6cG52ZDgwMkR4R3FBWll6MzZISkl0TEZTMHFaNk1YY1VVd0h6aHRDZzd6Sk9QazAxc3hGSUxQV0hlYk14R0NRckRKRGUzRnV1d19FdzVIRmpCeWZGenR0ZkpQcnJDMDdFUkFMenk3SFphTmdXMXN1eU1neGJ6cS03WDNCOGo5aldNRmliSXprVEgzakZIYVdLbG1nREVhVjlwNy1WUWhTYy0xUkNhTHpCSTNIV3JGRE1YVlJfUE1SV1dNNkxyY05oYmhoYUMyM0kzTi1nTUV4VlE3S2Q2a2tyeVltRXNtb3ctZFRmOVpaaDN6MS1Lc0otLUJ2NkZiT1drbWplZDVVMENyd0NPOUg0NmVmZEhtQ1AyTWZpXzFjczBIUkZXY2lkcWJkbzNQT1hPZG1JR1BweEVJRUtzWjJreTlXUUhzNmhMVnRaM3ZsZGNueHROYW4wcDk5dzgtaXFpeC16NnhaZ1c3Q3ZJV1JISzlsM05pTzVWemVkZ0dGUlhGT0VzbFpoT1ZhNTBJMl9BdjQwNVpFSk1oRU9tT1p4djRrbWNtTVFBZDFvTXo1V2N3Uy1FRXJOajNoVG5rd3AyOVlHbjNjNWZHZjRaaU5BYzNCZ0RSRHZjS0FxUUtORUJqV01oTEc5WDBOVlRtSG94MWg1ZG9Mb18xSUl1X1FnelFqMXpZR3N3MzBjWnh5WlFCTVRjclg2X1BubnJTUVpXTjBVemY5MjdrR3NxcEpnZEtkTUF4cmVPSDI=) # <-- Put your encrypted google-services.json here
              track: alpha
