workflows:
    react-native-android:
        name: React Native Android
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                #GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(Z0FBQUFBQmd3S2doTjQxZDFpWURKeTVadV9NaHlfdWhrSkx2VkRwQnU0UGxaQ2VwQjhmZFYyM0tXZWVhQlFVYTVmTFFKeUhmZS1oWlE5R182RU0zQm5tV1dOUGx6czBkU2JtQUdvWTNHODVVaTJodkdDaFdOczJsOFBnTlAtaF9seklfVWF0U2NBSHM=)
                PACKAGE_NAME: "com.destwin.sumasoft" # <-- Put your package name here e.g. com.domain.myapp
                CM_KEYSTORE: Encrypted() # <-- Put your encrypted keystore file here
                CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmd2ZTcxMXRTdUpkZDFReDF6MW9TVFlKRDR4aDhzdDIxODZ5TFRDbURhQ2xScG1XNk8tTnNON2d5eU96amFVZy1HUFk4X1JXdGVtY1Uwa3o3R1FCVkdlM0hmMVE9PQ==) # <-- Put your encrypted keystore password here
                CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmd2ZTlFdVhUOUFod1J0Q0FlMnZqX0M1Y01HV0pTNDBXLURRREhHMXR3V0xQM0hnd1B4SmdSUGRJc3hZS21BZFZxVGpyZ2VYNTVlV2cwbDVjU2d4R3ZTaWVtREE9PQ==) # <-- Put your encrypted keystore alias password here
                CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmd2Zkhja2lnM2w2Z1Z2ZWNpc05VOUw5WjVkWkdwczVxb2FYUzJiOS1STWNRT21ZdTBuN1EtajRPOHdwOFNrM1dUbjBIMmN3bkN3REdzN24za1l4aGYtOG84eFE9PQ==) # <-- Put your encrypted keystore alias username here 
            node: latest
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        cache:
            cache_paths:
              - $FCI_BUILD_DIR/node_modules
        scripts:
            - name: Install npm dependencies
              script: |
                #npm install
            - name: Cordova Platform
              script: |
                set -x
                pwd
                ls
                cordova create android-app
                cordova platform add android
            - name: Create Apk
              script: |
                echo "pwd"
                cd cordova-create-react-app && cordova run android
            #- name: Set Android SDK location
              #script: |
                #echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                    storePassword=$CM_KEYSTORE_PASSWORD
                    keyPassword=$CM_KEY_ALIAS_PASSWORD
                    keyAlias=$CM_KEY_ALIAS_USERNAME
                    storeFile=/tmp/keystore.keystore
                    EOF               
            - name: Build Android release
              script: |
                # Set environment variable so it can be used to increment build number in android/app/build.gradle
                # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
                # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
                #export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
                export NEW_BUILD_NUMBER=10101931
                #cd android && ./android-espresso-demo-project/gradlew assembleRelease
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
            email:
                recipients:
                    - saurabh.rajput@sumasoft.net
                    - mahendra.raut@sumasoft.net
                    - supriya.malusare@sumasoft.net
                notify:
                  success: true     # To not receive a notification when a build succeeds
                  failure: false    # To not receive a notification when a build fails
            slack: 
              # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
              channel: '#channel-name'
              notify_on_build_start: true   # To receive a notification when a build starts
              notify:
                success: true               # To not receive a notification when a build succeeds
                failure: true              # To not receive a notification when a build fails
            #google_play:
              # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
              #credentials: Encrypted(Z0FBQUFBQmd3SmZ0RnRPSU9wX0RhdmJXdWJObE1ENnhCWEdYU3ZhYXR3dm1DWldlbWg0RjRiWGdIVVVqUFcwT1dTcHdTRE1pVkJURVZZdHBFdDhmcDJLdDhaZFZ6bGtDb0RVak51a3VxMDc0eWJoWDRja0t2d3FkTEdFRl9mSUMyV1RJTlpGc3dVR0NQYUZwRFBwT3dSbXlrX1dHbnVXZ3RxVmpwRVZtTGQ0SVBxSXdfQ2FtR0xmUXk1WWU3VjJUek1xSkJXRmptWk9LOTBHRHA4VDRtTlV5Nk9PbnEtR0NlVmxWeVFUSFRWU1hrRGtTVjJfY2Z3RHQ3QWpySllYT3o1eDYybkc2SFQtSUJkUFVBNkIwLTVvemN4UmxhdXlzX2lWRWRfcVlhTXZRM1p3THlBT29DeHdCWmRSNEx2aXNYN2M0bHplUWVlNGk2Q1dHUEVKbnZyV3dKX2FKSmlsQVNGclpIZXViRGVETUhQUVZzX0NpU0dXdHBnV1psbGFfc3ZXNzVFMy1fTExrQnpvY2VTQ0h6dFBGUHhGd2ZLb0RtclFBVGpPaUR3eGYwVlN5Q1FaNUZTTGFrRmpBUS0zWGt2MTBYeElJeDlMV2hZU2JWTjJ0VEFTaC1BWTE0VTctbXVVV3VReV90QWNvRzR2bGJzeGVINUZ2LXp5cUdBZ2V2eWVjQjdXSG10b3oyRkJtTGZ3Tlo2dmRLeVotc0l0Tzl0elBsdVJEcXFGZ0RlRkZHaDM2YXcwamlERlZrVm9vNkRqaDVlTnJ1ZEdlaDIzUklCNWRqakpmam5mUUJDckdUSDhEa05DRkhYMWwwNjFreFh3NTJGdERqNUZ0VmNib1hRNi1DUWVVQmRuOGo3STc0clg1eUtQN2NkX3hzbVRoS3ZOek9SaW5jRWdaSkNPcHNzV1FDTzBzOVZzMklKTHg4X1hlSmNFc0tRWUVRMHlXa1FLNDVMOWJkS0ZzOEtpSXJJbjZJZ0IxdktEcE8tbmZuNFRZOGRVRDU1Rlp5Vkp5ZVlIX0hkejZ0YWJqRGJOZTg0MEo1RmVJY2VrSXZmX1BPVHdLSi1STkhjY2JxMnkwX1BHQUE2MFVRUno4QnhvM3dMN08xeS1PRmVMMmZWYjZoSmtOcWxCLVpLQWV5N0VSS2pwTzY0SVBGM3d6X3Bnamp3d0NpZWV6WkExSHZMbWl4U0k0a1VFVk9IbUVKbVgwVXd1TXVGb1A0TE9vYmVsTGVlYk5mRnVETktnWXZoc3F5QzIxS21MdmFiaUNDSmQ3U25GdzRPSzhHdWtNNjlOOVpBcXlOc1JfR1BjcGZQTndVWWJ1WF9rM0d4cU85ZEZiZHRsSW5jY2ZKeUtjUXlDZ2ZQejVLUzRMbl9KVkhxaWtHdnVtQm5yZHpBcEJ1RDN3dzcyY0hRZ1R1UUFZdjg5SVlUVVFDR0dua0tJTXhwYWJpeGp3WGNoTVVfTWVnSVg4V0l2cWpEOXlPYU51a0hDNVN3cEU0ajZ5Z2VSRUlLMEg1eEQzbWw0NHFEX0tadkFvX05KbldYUEJsRTVIVGVTd1VyN2ZCZFJWYWtaTnZPdXZBYnA4SkRQRUZPYkdWSkp3M3lNVW9jb1V1d09WLVZKQkFoeWlHNHBiM09IVGp3Wll0YWpYV1Q2VHNCLV9fN3hIT0ZKTFc5VkRpS3hUUks1ZWpYSE9IWjdtNVgtWW1nRTh2YzBDc0tLSjNsc1hMV1liNnRpUXJCYkQ0LXQyekQ2NTVqaUUwYWI2RGpOR0hCb0lKcHJOaWZRcGJZVENjVWtua3JhTmFEd1dtRVp4NklUUG80VHVuUElEOXVzc0E4YkNiNTRibEFyNTVPOWZoSkRBTnJZcHdOQ05VZG5vWTBObTJQQUFtYjh3SzhIR0QwX2dkMGZWQ21GN2Y5LXdfVm0zazJtWWlDM2VobkFDUjdZaVRoUUhabUxDTzF1U0xibnF5bWNsd2V0OVZvQkhHT1hEUHNpSG9DMDFfUlhmaXozdzd4SFlaZjRvVk00bGtEajlSQ3FWNVpYbk0zUy1heDVVYWZILXVDMENSVWpGcDFrcmZBczFNSXAtcjlTdXNEdzFzX2NYSWRRMlFBTWREeThYWlNkLW1fV3FIQTBwbEZKaVFkeG55dk82Qi1zUE84M0Q1cVdjdllkTFk4SHRabEowd1RLOW9NWXNhTGFmdGNCdkp5V2FYWG5tQzhFRWhjNi11aUpLZG9XaGpLdU8wQ05KaEIzWFVRa2p6bkZLYVBqM1BrSWhYVmFUQ3N5MjB1STRsTlV4VGxPUkdISm44bXlLdFcyODl1bFpCbHBBbUJfWDd5eE41Z3REaEFpeFRSeC1xNU5ITUx3aGFrWmFKZWxQZXhDdFpGbTY3ZHhVUDNXallTLVpNNDIzUGNmakREb09UUzBYclFodzZTSWo3cDZMLWM1Y0x1VFJUa29FSGNSTzA2ZEpFXzJGQjVseUtkVWxrYnBGdXFLMVZISjJsblVkUm1iTl9aUV80cXpZTEQweUVhVnhWaFhtc2R1SWhiazM0a29kbjM2UUdSaTFHX05WUW50bjcydVc5WUtDYzhGSGNKUDY4Q0VweUdIU1EtcmlTYnhnZzl0TXROSkJVM29IMVNhUFA0c2FXMndmNzIxZHFqNXFobW02Z0NBOVNfRkNhYm94ZXdMczJSQnc0VTZBdC15eEs5REdpdDlTcDNmOWdiUl83aTY2TjJQb01ZQ191V1NoWkkyb0ZwZEFULWlpQnp6RVhpRzE2MldHbTZ2dEFVaEg1bmtkZUg1cXhXNnRnSGkyQzdjMzJiVV9oQ1dVTmV3czNXNmRZQS1KNUtBSlpPSzdKNFdMTkMzS0U2dzFWU2NTd0hmN2VlaHgwWU9xSHROdV80VC1QdHRabWRxc1lRLWczZkRkNHBxVzlJa0MwT0U2c0dBQVhOS245OVU3blBjQ1N2OHZWNHZoOVBUR1h5OFlWYnpiYll3Vkk1Yk9UbXFQNUI4YzZ5U05RX0IyaHppUWhnLWNZTERmRWtIZjNWY0ozSERXbi14QnROWjJaVHNOcjNSSDBfTkZPbXNrRkFZeG15OTI2UmktSU9aNC1uTldIWUF0cFZheVkzaUMyM054cVc4eHhKOXM0enZ0elYtQ1lzZ3gxcjNQTlVhNGJ2N0prZmNESjdkYU0wMjFFeTF3UjFYSkxhQUhVWHIxcG9VSWZMQ0tNTllBY1FlNXpZNjVEVmVYZDFpV1hDeFpaLVNJYnlXZ3dGRzJuemFwVlNmaG0wLTdUVVZoNDI0SHRTdVU3OEMwYkhMTmhENXl1Qy1feVU0Wk81UXhRUkx5eE5qdkhmQVlxR2p4bUZxMmJ0eUhVYS12SmduYWRUcEVsWjZwTDNRMnN0YkVKY2JKZVBWS1BpU0dQbllfZm82N0RtT0JsREd0ejhOdEk0RVBaVVhUNnBnNjlxLU5TaWl2eWdGNzJXT01xVnZ2Ql8yUXJmNlRQejhpdXFKU0JDRjhJUmNUdVF5b0ZVT0xya0VnOWQ0VEVYak9ZWEZlYTNFX0I4elNYTDVSWld4LXZ1ZjNuM1htU1JUakNMU1h4WS1ZWnNzdzZmZ0FtSFgzRnVnT0dYdnlXWUd2cDh5R3A5emMyWDJselFVNS1DTWlHUDZSTndDUjMxTnNOS1NYeFlUM3FVU1ZycExxbkhRX2FlZWlIcjMxWmgxTzNFTTlHWTgxWHZqcUFOTGtQOGxLZzdVbGU5eXQ2T2RkTVhGRzJfTmc3SlhreWNLcUNyLWFwYTZoQTZzNTFPYUJRd2tVYjI1aVBINnlTNU9LQ1RoVFN4OVM5bXBsclRaemJMTDBmeU9EWWhvSTdjVVlBSTBjSjZsYWlhRG1SRTZVUzhoRVUzQ0IzYURQaDYyaHdCelJlYTVPVlVCeEw4dXhlQXpiWUFWS25nN3p1RDVobEZvNXFFOTJ3Y2RJZTBJS0hMZDRidi1BaDVYNjdIWDM4YWNOQ1R0bXNXSjlPOTkwYkdZTzN5QzdRcU5PTjQtNHJRMjkzSEFBVXFmc3BXRDhSQ3BpQmJKV2V4ano0NFpGM01uWXVfVC1ETkhxc1RLYkJEUWlsT0VHaXdPODZteVZ2YThVZ1dlbXVfVVF1Q0Z2c1ZILUtDRkFqU3J1bHZTRjE3M080LUNhZndPcVpVWUpiVURmaDYtMnFDWjZzdkdUbUw1QmQ0bXJmTWlXd2RPeW9yMXlrZFlLLTJweTktQTFDdWt0ZmVNd2NOdlVZX2NIbENoZGJaTTF3bnIxdXE1OGI3Smx6ODFOcDV5QUdfOVI1aV9MckNmbjd5Yk9saFRZQ1d1bVgxM192Unh0cTFRQlI2RjBBU2Y5MS01T01fYWVySG9HMXRQSVJxVU5IWGNDbnZySUUtWjludERfaFM4NE5OMVVRSWdvMDZYQ1d5bnpKQlRCbU45SkktSzBkamNYWTRNcUFrQ2NtSk5PQ01WNXZXcFBCNldGZllKTmp0Rmdqc2Z4WUtaQWctOUhraGZTMHFYVmljb21BSlFsaC0wVnZVQ0dVUWw4THBpeUhiWmFIaEFrVXd4WEVIZ21tYzZEbExCUmE0OGhaRjZWN3UtVXR2eW8xSVhUdVVvOWJTQ2o3REVRYmtjaEpHbGc3S0g3SzF5MjM2MXRXVHFoQTlqdFk0VjdoYlE5TFNyMDg4UVU5NTBxbDdKeHpoTlB5VzhlRzlaeVBQNjhPZExEckI5ekIzOEV5LWxDVVhQYXlIRFJVZFMzR2VfZnA2MVN6NHZVa1czWHU2VVVSZkVDLWs1R2tYUGdORlZDUDdVSFh6WkJtS3A0cHNvMURseE9XS19qVXRUckFvSzRFZWZIN1NJUjByNHpXOEFZQlQ2UEVEV1E4WnpzLTJwS1p6eERpdmhxMkVBaV9xRVFfWFdKOV8xdHhIUlE3cXZnN3h2WlNWMGpRSmQtbzEwZHczYkRPNGJub1dSWjNXcWxZaW5lQWRsYXJ3Z0xSQzNyY2ZqMGUzSHlucXFEb205R19UQkh4V2dMSU9mbUczdEc0bXBXTi1QcDJRWGRzWmh6d1pPdTdmX0pmd3V0Q2QwblladmFkOGRCRV9MM09uRUlsR0pqNl9wcUlJOFFoYXNoazVPaE4tcXJFMWJQeVRQbkpELU1RcXUxWWhYaXhBdzVTc2hyM2hyMlFLVFZMMlJoeF81aXA2U3g5MUw3cG5hN0pSSDlnMWxJWFBBYk5NU2RlTGp3d3lLX0xtb0VhMnVQb0YzTXpYQkdlaHNhQ2tmdEFpRGMxZThZNm5fZUJYMWRwVUtkTGNTdDI0ajFEMTFyV2NtQ3FwT29NR0FDZldGOEIwRElEaFZpbm5GTEpjZUZReVhieWd0WndndVV0ZzRFN1JaNzNyWDlJRVplbzR3QnBIa29fdVpVbkxPUURmV3h1bWV5YmpfQVIySUxENG1sVHhHc1BLVXhmc2RKT1BCa0YyR3JsNGJqLXhseDgxaF9acDEzOVNkRnR0XzNya3l4QUlWbHh3MUlVeVY0TThIdm9TcTBTdVUtU3pMeVpqRVRYMHBvcXozV3F6bnhaVWp3czU0Mi1TcmRmdkwzRWl3ZzRaWWdSb2E2RWgyWl9wYlpOX2R3eFJkZVhINUNudnRZSHI2VWRXRDNaT1NfUTVwc1YybEUxdEtGN0RiYlFRdkxLOEw1dFV4YXowdFo4Ni1JbDZlWDVNVFpFNS13SHFJN2RiUWZuX3oxV0dqeHlRTEJpY1hsMXlFckNUSEt6THk0SEE9PQ==) # <-- Put your encrypted google-services.json here
              #track: alpha
